// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.13.0
// source: auth_user.proto

package auth_user

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthUserToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Method string `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Digest string `protobuf:"bytes,2,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *AuthUserToken) Reset() {
	*x = AuthUserToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserToken) ProtoMessage() {}

func (x *AuthUserToken) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserToken.ProtoReflect.Descriptor instead.
func (*AuthUserToken) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{0}
}

func (x *AuthUserToken) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *AuthUserToken) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type AuthUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // NOTE, password is hidden in ALL reply related messages
	Emailaddr string `protobuf:"bytes,3,opt,name=emailaddr,proto3" json:"emailaddr,omitempty"`
}

func (x *AuthUserInfo) Reset() {
	*x = AuthUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserInfo) ProtoMessage() {}

func (x *AuthUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserInfo.ProtoReflect.Descriptor instead.
func (*AuthUserInfo) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{1}
}

func (x *AuthUserInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AuthUserInfo) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *AuthUserInfo) GetEmailaddr() string {
	if x != nil {
		return x.Emailaddr
	}
	return ""
}

type AuthUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *AuthUserReply) Reset() {
	*x = AuthUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthUserReply) ProtoMessage() {}

func (x *AuthUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthUserReply.ProtoReflect.Descriptor instead.
func (*AuthUserReply) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{2}
}

func (x *AuthUserReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CreateAuthUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AuthUserToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Info  *AuthUserInfo  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CreateAuthUserRequest) Reset() {
	*x = CreateAuthUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthUserRequest) ProtoMessage() {}

func (x *CreateAuthUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthUserRequest.ProtoReflect.Descriptor instead.
func (*CreateAuthUserRequest) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{3}
}

func (x *CreateAuthUserRequest) GetToken() *AuthUserToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *CreateAuthUserRequest) GetInfo() *AuthUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type CreateAuthUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *AuthUserReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *CreateAuthUserReply) Reset() {
	*x = CreateAuthUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAuthUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAuthUserReply) ProtoMessage() {}

func (x *CreateAuthUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAuthUserReply.ProtoReflect.Descriptor instead.
func (*CreateAuthUserReply) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{4}
}

func (x *CreateAuthUserReply) GetReply() *AuthUserReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

type ReadAuthUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AuthUserToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ReadAuthUserRequest) Reset() {
	*x = ReadAuthUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAuthUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuthUserRequest) ProtoMessage() {}

func (x *ReadAuthUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuthUserRequest.ProtoReflect.Descriptor instead.
func (*ReadAuthUserRequest) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{5}
}

func (x *ReadAuthUserRequest) GetToken() *AuthUserToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type ReadAuthUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *AuthUserReply  `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Info  []*AuthUserInfo `protobuf:"bytes,2,rep,name=info,proto3" json:"info,omitempty"`
}

func (x *ReadAuthUserReply) Reset() {
	*x = ReadAuthUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAuthUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAuthUserReply) ProtoMessage() {}

func (x *ReadAuthUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAuthUserReply.ProtoReflect.Descriptor instead.
func (*ReadAuthUserReply) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{6}
}

func (x *ReadAuthUserReply) GetReply() *AuthUserReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *ReadAuthUserReply) GetInfo() []*AuthUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAuthUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AuthUserToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Info  *AuthUserInfo  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateAuthUserRequest) Reset() {
	*x = UpdateAuthUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthUserRequest) ProtoMessage() {}

func (x *UpdateAuthUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthUserRequest.ProtoReflect.Descriptor instead.
func (*UpdateAuthUserRequest) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateAuthUserRequest) GetToken() *AuthUserToken {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *UpdateAuthUserRequest) GetInfo() *AuthUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type UpdateAuthUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *AuthUserReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
	Info  *AuthUserInfo  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UpdateAuthUserReply) Reset() {
	*x = UpdateAuthUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAuthUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAuthUserReply) ProtoMessage() {}

func (x *UpdateAuthUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAuthUserReply.ProtoReflect.Descriptor instead.
func (*UpdateAuthUserReply) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateAuthUserReply) GetReply() *AuthUserReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *UpdateAuthUserReply) GetInfo() *AuthUserInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type DeleteAuthUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *AuthUserToken `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *DeleteAuthUserRequest) Reset() {
	*x = DeleteAuthUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthUserRequest) ProtoMessage() {}

func (x *DeleteAuthUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthUserRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthUserRequest) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteAuthUserRequest) GetToken() *AuthUserToken {
	if x != nil {
		return x.Token
	}
	return nil
}

type DeleteAuthUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reply *AuthUserReply `protobuf:"bytes,1,opt,name=reply,proto3" json:"reply,omitempty"`
}

func (x *DeleteAuthUserReply) Reset() {
	*x = DeleteAuthUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthUserReply) ProtoMessage() {}

func (x *DeleteAuthUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_auth_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthUserReply.ProtoReflect.Descriptor instead.
func (*DeleteAuthUserReply) Descriptor() ([]byte, []int) {
	return file_auth_user_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteAuthUserReply) GetReply() *AuthUserReply {
	if x != nil {
		return x.Reply
	}
	return nil
}

var File_auth_user_proto protoreflect.FileDescriptor

var file_auth_user_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x1e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x3f, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x22, 0x64, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x61, 0x64, 0x64, 0x72, 0x22, 0x21, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x9e, 0x01, 0x0a, 0x15,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5a, 0x0a, 0x13,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x5a, 0x0a, 0x13, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x43, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9a, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x61, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x40, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x9e, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x40, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x22, 0x9c, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x72, 0x65,
	0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x40, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41,
	0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x5c, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x5a, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x43, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74,
	0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x32, 0x84, 0x04, 0x0a, 0x08,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x7e, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64,
	0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x33, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x41, 0x75,
	0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x7e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x42, 0x5d, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x78, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x42, 0x10, 0x41, 0x75, 0x74, 0x68, 0x55, 0x73, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x77, 0x65, 0x69, 0x68, 0x75, 0x61, 0x63, 0x65, 0x72,
	0x6e, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x75, 0x73, 0x65, 0x72, 0xa2, 0x02, 0x03, 0x52, 0x54,
	0x47, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_user_proto_rawDescOnce sync.Once
	file_auth_user_proto_rawDescData = file_auth_user_proto_rawDesc
)

func file_auth_user_proto_rawDescGZIP() []byte {
	file_auth_user_proto_rawDescOnce.Do(func() {
		file_auth_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_user_proto_rawDescData)
	})
	return file_auth_user_proto_rawDescData
}

var file_auth_user_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_auth_user_proto_goTypes = []interface{}{
	(*AuthUserToken)(nil),         // 0: grpc.grpc_test_proto.auth_user.AuthUserToken
	(*AuthUserInfo)(nil),          // 1: grpc.grpc_test_proto.auth_user.AuthUserInfo
	(*AuthUserReply)(nil),         // 2: grpc.grpc_test_proto.auth_user.AuthUserReply
	(*CreateAuthUserRequest)(nil), // 3: grpc.grpc_test_proto.auth_user.CreateAuthUserRequest
	(*CreateAuthUserReply)(nil),   // 4: grpc.grpc_test_proto.auth_user.CreateAuthUserReply
	(*ReadAuthUserRequest)(nil),   // 5: grpc.grpc_test_proto.auth_user.ReadAuthUserRequest
	(*ReadAuthUserReply)(nil),     // 6: grpc.grpc_test_proto.auth_user.ReadAuthUserReply
	(*UpdateAuthUserRequest)(nil), // 7: grpc.grpc_test_proto.auth_user.UpdateAuthUserRequest
	(*UpdateAuthUserReply)(nil),   // 8: grpc.grpc_test_proto.auth_user.UpdateAuthUserReply
	(*DeleteAuthUserRequest)(nil), // 9: grpc.grpc_test_proto.auth_user.DeleteAuthUserRequest
	(*DeleteAuthUserReply)(nil),   // 10: grpc.grpc_test_proto.auth_user.DeleteAuthUserReply
}
var file_auth_user_proto_depIdxs = []int32{
	0,  // 0: grpc.grpc_test_proto.auth_user.CreateAuthUserRequest.token:type_name -> grpc.grpc_test_proto.auth_user.AuthUserToken
	1,  // 1: grpc.grpc_test_proto.auth_user.CreateAuthUserRequest.info:type_name -> grpc.grpc_test_proto.auth_user.AuthUserInfo
	2,  // 2: grpc.grpc_test_proto.auth_user.CreateAuthUserReply.reply:type_name -> grpc.grpc_test_proto.auth_user.AuthUserReply
	0,  // 3: grpc.grpc_test_proto.auth_user.ReadAuthUserRequest.token:type_name -> grpc.grpc_test_proto.auth_user.AuthUserToken
	2,  // 4: grpc.grpc_test_proto.auth_user.ReadAuthUserReply.reply:type_name -> grpc.grpc_test_proto.auth_user.AuthUserReply
	1,  // 5: grpc.grpc_test_proto.auth_user.ReadAuthUserReply.info:type_name -> grpc.grpc_test_proto.auth_user.AuthUserInfo
	0,  // 6: grpc.grpc_test_proto.auth_user.UpdateAuthUserRequest.token:type_name -> grpc.grpc_test_proto.auth_user.AuthUserToken
	1,  // 7: grpc.grpc_test_proto.auth_user.UpdateAuthUserRequest.info:type_name -> grpc.grpc_test_proto.auth_user.AuthUserInfo
	2,  // 8: grpc.grpc_test_proto.auth_user.UpdateAuthUserReply.reply:type_name -> grpc.grpc_test_proto.auth_user.AuthUserReply
	1,  // 9: grpc.grpc_test_proto.auth_user.UpdateAuthUserReply.info:type_name -> grpc.grpc_test_proto.auth_user.AuthUserInfo
	0,  // 10: grpc.grpc_test_proto.auth_user.DeleteAuthUserRequest.token:type_name -> grpc.grpc_test_proto.auth_user.AuthUserToken
	2,  // 11: grpc.grpc_test_proto.auth_user.DeleteAuthUserReply.reply:type_name -> grpc.grpc_test_proto.auth_user.AuthUserReply
	3,  // 12: grpc.grpc_test_proto.auth_user.AuthUser.CreateAuthUser:input_type -> grpc.grpc_test_proto.auth_user.CreateAuthUserRequest
	5,  // 13: grpc.grpc_test_proto.auth_user.AuthUser.ReadAuthUser:input_type -> grpc.grpc_test_proto.auth_user.ReadAuthUserRequest
	7,  // 14: grpc.grpc_test_proto.auth_user.AuthUser.UpdateAuthUser:input_type -> grpc.grpc_test_proto.auth_user.UpdateAuthUserRequest
	9,  // 15: grpc.grpc_test_proto.auth_user.AuthUser.DeleteAuthUser:input_type -> grpc.grpc_test_proto.auth_user.DeleteAuthUserRequest
	4,  // 16: grpc.grpc_test_proto.auth_user.AuthUser.CreateAuthUser:output_type -> grpc.grpc_test_proto.auth_user.CreateAuthUserReply
	6,  // 17: grpc.grpc_test_proto.auth_user.AuthUser.ReadAuthUser:output_type -> grpc.grpc_test_proto.auth_user.ReadAuthUserReply
	8,  // 18: grpc.grpc_test_proto.auth_user.AuthUser.UpdateAuthUser:output_type -> grpc.grpc_test_proto.auth_user.UpdateAuthUserReply
	10, // 19: grpc.grpc_test_proto.auth_user.AuthUser.DeleteAuthUser:output_type -> grpc.grpc_test_proto.auth_user.DeleteAuthUserReply
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_auth_user_proto_init() }
func file_auth_user_proto_init() {
	if File_auth_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAuthUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAuthUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAuthUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAuthUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_user_proto_goTypes,
		DependencyIndexes: file_auth_user_proto_depIdxs,
		MessageInfos:      file_auth_user_proto_msgTypes,
	}.Build()
	File_auth_user_proto = out.File
	file_auth_user_proto_rawDesc = nil
	file_auth_user_proto_goTypes = nil
	file_auth_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AuthUserClient is the client API for AuthUser service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthUserClient interface {
	CreateAuthUser(ctx context.Context, in *CreateAuthUserRequest, opts ...grpc.CallOption) (*CreateAuthUserReply, error)
	ReadAuthUser(ctx context.Context, in *ReadAuthUserRequest, opts ...grpc.CallOption) (*ReadAuthUserReply, error)
	UpdateAuthUser(ctx context.Context, in *UpdateAuthUserRequest, opts ...grpc.CallOption) (*UpdateAuthUserReply, error)
	DeleteAuthUser(ctx context.Context, in *DeleteAuthUserRequest, opts ...grpc.CallOption) (*DeleteAuthUserReply, error)
}

type authUserClient struct {
	cc grpc.ClientConnInterface
}

func NewAuthUserClient(cc grpc.ClientConnInterface) AuthUserClient {
	return &authUserClient{cc}
}

func (c *authUserClient) CreateAuthUser(ctx context.Context, in *CreateAuthUserRequest, opts ...grpc.CallOption) (*CreateAuthUserReply, error) {
	out := new(CreateAuthUserReply)
	err := c.cc.Invoke(ctx, "/grpc.grpc_test_proto.auth_user.AuthUser/CreateAuthUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authUserClient) ReadAuthUser(ctx context.Context, in *ReadAuthUserRequest, opts ...grpc.CallOption) (*ReadAuthUserReply, error) {
	out := new(ReadAuthUserReply)
	err := c.cc.Invoke(ctx, "/grpc.grpc_test_proto.auth_user.AuthUser/ReadAuthUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authUserClient) UpdateAuthUser(ctx context.Context, in *UpdateAuthUserRequest, opts ...grpc.CallOption) (*UpdateAuthUserReply, error) {
	out := new(UpdateAuthUserReply)
	err := c.cc.Invoke(ctx, "/grpc.grpc_test_proto.auth_user.AuthUser/UpdateAuthUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authUserClient) DeleteAuthUser(ctx context.Context, in *DeleteAuthUserRequest, opts ...grpc.CallOption) (*DeleteAuthUserReply, error) {
	out := new(DeleteAuthUserReply)
	err := c.cc.Invoke(ctx, "/grpc.grpc_test_proto.auth_user.AuthUser/DeleteAuthUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthUserServer is the server API for AuthUser service.
type AuthUserServer interface {
	CreateAuthUser(context.Context, *CreateAuthUserRequest) (*CreateAuthUserReply, error)
	ReadAuthUser(context.Context, *ReadAuthUserRequest) (*ReadAuthUserReply, error)
	UpdateAuthUser(context.Context, *UpdateAuthUserRequest) (*UpdateAuthUserReply, error)
	DeleteAuthUser(context.Context, *DeleteAuthUserRequest) (*DeleteAuthUserReply, error)
}

// UnimplementedAuthUserServer can be embedded to have forward compatible implementations.
type UnimplementedAuthUserServer struct {
}

func (*UnimplementedAuthUserServer) CreateAuthUser(context.Context, *CreateAuthUserRequest) (*CreateAuthUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAuthUser not implemented")
}
func (*UnimplementedAuthUserServer) ReadAuthUser(context.Context, *ReadAuthUserRequest) (*ReadAuthUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadAuthUser not implemented")
}
func (*UnimplementedAuthUserServer) UpdateAuthUser(context.Context, *UpdateAuthUserRequest) (*UpdateAuthUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAuthUser not implemented")
}
func (*UnimplementedAuthUserServer) DeleteAuthUser(context.Context, *DeleteAuthUserRequest) (*DeleteAuthUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAuthUser not implemented")
}

func RegisterAuthUserServer(s *grpc.Server, srv AuthUserServer) {
	s.RegisterService(&_AuthUser_serviceDesc, srv)
}

func _AuthUser_CreateAuthUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthUserServer).CreateAuthUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_test_proto.auth_user.AuthUser/CreateAuthUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthUserServer).CreateAuthUser(ctx, req.(*CreateAuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthUser_ReadAuthUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthUserServer).ReadAuthUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_test_proto.auth_user.AuthUser/ReadAuthUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthUserServer).ReadAuthUser(ctx, req.(*ReadAuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthUser_UpdateAuthUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthUserServer).UpdateAuthUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_test_proto.auth_user.AuthUser/UpdateAuthUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthUserServer).UpdateAuthUser(ctx, req.(*UpdateAuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthUser_DeleteAuthUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAuthUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthUserServer).DeleteAuthUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.grpc_test_proto.auth_user.AuthUser/DeleteAuthUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthUserServer).DeleteAuthUser(ctx, req.(*DeleteAuthUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthUser_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.grpc_test_proto.auth_user.AuthUser",
	HandlerType: (*AuthUserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAuthUser",
			Handler:    _AuthUser_CreateAuthUser_Handler,
		},
		{
			MethodName: "ReadAuthUser",
			Handler:    _AuthUser_ReadAuthUser_Handler,
		},
		{
			MethodName: "UpdateAuthUser",
			Handler:    _AuthUser_UpdateAuthUser_Handler,
		},
		{
			MethodName: "DeleteAuthUser",
			Handler:    _AuthUser_DeleteAuthUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth_user.proto",
}
